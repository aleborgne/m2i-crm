Angular
-----

Quelle différence entre component "ui" et library "grafik"?

How to JSON to Prestation[]
Il faut utiliser un filtre RxJS pour que le flux JSON soit mappé en flux d'objet Prestation[] => operator map de RxJS
C'est là que le  Object.assign(this, obj); dans le constructeur du model Prestation est utile. Progammation Objet.





Pipes
-----
https://angular.io/api/core/LOCALE_ID
Modification de la Local ID
fr-FR n'existe pas donc on déclare une nouvelle langue
registerLocaleData(localeFr, 'fr');
On remplace la variable LOCAL_ID au niveau root

Attention aux perfs. Appels multiple des fonctions (positionnées dans la vue) à cause des lifecycles.
NE JAMAIS APPELER DES FONCTIONS DIRECTEMENT DANS UNE VUE HTML. Angular actualise les vues de façon incalculable lors des lifecycles.
On utilisera des pipes qui ne sont pas actualisés dans les lifecycles.

Créer un pipe dans Share module et l'exporter (--export) pour l'utiliser dans d'autes modules.





States
-----
Dans une app en prod on aurait [value]="state.key" et on aurait ajouté un fonction dans le service pour retourner la bonne valeur à la base de données.
Mais pour des raison pratiques pour la formation, on évite de passer par cette étape. Donc [value]="state.value".
<select>
  <option [value]="state.value" *ngFor="let state of states | keyvalue">{{ state.value }}</option>
</select>

On fait la requête HTTP de modification du State, puis lors de la réponse du serveur on met à jour le front.





Directive ng-content
-----
Cette directive prend le contenu placé dans les balises du webComponent Host. Elle n'est pas présente dans le DOM.
S'il existe plusieurs <ng-content> La projection se fait dans la dernière balise du webcomponent enfant.

On peut cibler des élement avec des selecteur <ng-content select="p"> la transclusion se fait alors dans la première balise.
NE FONCTIONNE PAS AVEC LES SELECTEUR ID (#monID) MAIS FONCTIONNE AVEC LE SELECTEUR ATTRIBUT ([id="monID"])
